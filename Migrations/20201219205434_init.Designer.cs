// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hackatonbb.Data;

namespace hackatonbb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201219205434_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("BoughtCoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("BoughtCoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("hackatonbb.Models.Abiturient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreditCardProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Secondname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Thirdname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VkId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CreditCardProfileId");

                    b.ToTable("Abiturients");
                });

            modelBuilder.Entity("hackatonbb.Models.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EventDescribtion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("EventLevelId")
                        .HasColumnType("int");

                    b.Property<string>("EventName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("EventRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ResultPlace")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventLevelId");

                    b.HasIndex("EventRoleId");

                    b.HasIndex("StudentId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("hackatonbb.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("hackatonbb.Models.CreditCardProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("INN")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SNILS")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("creditCardProfiles");
                });

            modelBuilder.Entity("hackatonbb.Models.EventLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("EventLevels");
                });

            modelBuilder.Entity("hackatonbb.Models.EventRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("EventRoles");
                });

            modelBuilder.Entity("hackatonbb.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("hackatonbb.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreditCardProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Secondname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Thirdname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CreditCardProfileId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("hackatonbb.Models.GuestCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiringDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GuestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscriptionDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestsCources");
                });

            modelBuilder.Entity("hackatonbb.Models.Privelege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AbiturientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("SphereId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbiturientId");

                    b.HasIndex("SphereId");

                    b.ToTable("Priveleges");
                });

            modelBuilder.Entity("hackatonbb.Models.Priveleges2Abiturients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AbiturientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PrivelegeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbiturientId");

                    b.HasIndex("PrivelegeId");

                    b.ToTable("Priveleges2Abiturients");
                });

            modelBuilder.Entity("hackatonbb.Models.Priveleges2Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PrivelegeId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrivelegeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Priveleges2Students");
                });

            modelBuilder.Entity("hackatonbb.Models.RaitingTimeStamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RaitingValue")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("RaitingTimeStamps");
                });

            modelBuilder.Entity("hackatonbb.Models.Spec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Specs");
                });

            modelBuilder.Entity("hackatonbb.Models.Sphere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Spheres");
                });

            modelBuilder.Entity("hackatonbb.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreditCardProfileId")
                        .HasColumnType("int");

                    b.Property<bool>("IsGoodScores")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Raiting")
                        .HasColumnType("double");

                    b.Property<string>("Secondname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("SpecId")
                        .HasColumnType("int");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Thirdname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VkId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CreditCardProfileId");

                    b.HasIndex("SpecId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("hackatonbb.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("BoughtCoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hackatonbb.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("hackatonbb.Models.Abiturient", b =>
                {
                    b.HasOne("hackatonbb.Models.CreditCardProfile", "CreditCardProfile")
                        .WithMany()
                        .HasForeignKey("CreditCardProfileId");

                    b.Navigation("CreditCardProfile");
                });

            modelBuilder.Entity("hackatonbb.Models.Achievement", b =>
                {
                    b.HasOne("hackatonbb.Models.EventLevel", "EventLevel")
                        .WithMany()
                        .HasForeignKey("EventLevelId");

                    b.HasOne("hackatonbb.Models.EventRole", "EventRole")
                        .WithMany()
                        .HasForeignKey("EventRoleId");

                    b.HasOne("hackatonbb.Models.Student", null)
                        .WithMany("Achievements")
                        .HasForeignKey("StudentId");

                    b.Navigation("EventLevel");

                    b.Navigation("EventRole");
                });

            modelBuilder.Entity("hackatonbb.Models.Guest", b =>
                {
                    b.HasOne("hackatonbb.Models.CreditCardProfile", "CreditCardProfile")
                        .WithMany()
                        .HasForeignKey("CreditCardProfileId");

                    b.Navigation("CreditCardProfile");
                });

            modelBuilder.Entity("hackatonbb.Models.GuestCourse", b =>
                {
                    b.HasOne("hackatonbb.Models.Course", "Course")
                        .WithMany("Guests")
                        .HasForeignKey("CourseId");

                    b.HasOne("hackatonbb.Models.Guest", "Guest")
                        .WithMany("SelectedCources")
                        .HasForeignKey("GuestId");

                    b.Navigation("Course");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("hackatonbb.Models.Privelege", b =>
                {
                    b.HasOne("hackatonbb.Models.Abiturient", null)
                        .WithMany("SelectedPriveleges")
                        .HasForeignKey("AbiturientId");

                    b.HasOne("hackatonbb.Models.Sphere", "Sphere")
                        .WithMany()
                        .HasForeignKey("SphereId");

                    b.Navigation("Sphere");
                });

            modelBuilder.Entity("hackatonbb.Models.Priveleges2Abiturients", b =>
                {
                    b.HasOne("hackatonbb.Models.Abiturient", "Abiturient")
                        .WithMany()
                        .HasForeignKey("AbiturientId");

                    b.HasOne("hackatonbb.Models.Privelege", "Privelege")
                        .WithMany()
                        .HasForeignKey("PrivelegeId");

                    b.Navigation("Abiturient");

                    b.Navigation("Privelege");
                });

            modelBuilder.Entity("hackatonbb.Models.Priveleges2Students", b =>
                {
                    b.HasOne("hackatonbb.Models.Privelege", "Privelege")
                        .WithMany()
                        .HasForeignKey("PrivelegeId");

                    b.HasOne("hackatonbb.Models.Student", "Student")
                        .WithMany("Priveleges")
                        .HasForeignKey("StudentId");

                    b.Navigation("Privelege");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("hackatonbb.Models.RaitingTimeStamp", b =>
                {
                    b.HasOne("hackatonbb.Models.Student", "Student")
                        .WithMany("RaitingTimeStamps")
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("hackatonbb.Models.Spec", b =>
                {
                    b.HasOne("hackatonbb.Models.Faculty", "Faculty")
                        .WithMany("Specs")
                        .HasForeignKey("FacultyId");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("hackatonbb.Models.Student", b =>
                {
                    b.HasOne("hackatonbb.Models.CreditCardProfile", "CreditCardProfile")
                        .WithMany()
                        .HasForeignKey("CreditCardProfileId");

                    b.HasOne("hackatonbb.Models.Spec", "Spec")
                        .WithMany("Students")
                        .HasForeignKey("SpecId");

                    b.Navigation("CreditCardProfile");

                    b.Navigation("Spec");
                });

            modelBuilder.Entity("hackatonbb.Models.Abiturient", b =>
                {
                    b.Navigation("SelectedPriveleges");
                });

            modelBuilder.Entity("hackatonbb.Models.Course", b =>
                {
                    b.Navigation("Guests");
                });

            modelBuilder.Entity("hackatonbb.Models.Faculty", b =>
                {
                    b.Navigation("Specs");
                });

            modelBuilder.Entity("hackatonbb.Models.Guest", b =>
                {
                    b.Navigation("SelectedCources");
                });

            modelBuilder.Entity("hackatonbb.Models.Spec", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("hackatonbb.Models.Student", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Priveleges");

                    b.Navigation("RaitingTimeStamps");
                });
#pragma warning restore 612, 618
        }
    }
}
